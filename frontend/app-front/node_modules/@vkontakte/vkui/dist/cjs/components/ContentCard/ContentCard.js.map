{"version":3,"sources":["../../../../src/components/ContentCard/ContentCard.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { getFetchPriorityProp } from '../../lib/utils';\nimport { HasRef, HasRootRef } from '../../types';\nimport { Card, CardProps } from '../Card/Card';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './ContentCard.module.css';\n\nexport interface ContentCardProps\n  extends HasRootRef<HTMLDivElement>,\n    Omit<TappableProps, 'getRootRef' | 'crossOrigin'>,\n    Omit<React.ImgHTMLAttributes<HTMLImageElement>, keyof React.HTMLAttributes<HTMLImageElement>>,\n    HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: React.ReactNode;\n  /**\n   Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   Позволяет поменять тег используемый для заголовка\n   */\n  headerComponent?: React.ElementType;\n  /**\n   Текст\n   */\n  text?: React.ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: React.ReactNode;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  mode?: CardProps['mode'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ContentCard\n */\nexport const ContentCard = ({\n  subtitle,\n  header,\n  headerComponent = 'span',\n  text,\n  caption,\n  // card props\n  className,\n  mode = 'shadow',\n  style,\n  getRootRef,\n  // img props\n  getRef,\n  maxHeight,\n  src,\n  srcSet,\n  alt = '',\n  width,\n  height,\n  crossOrigin,\n  decoding,\n  loading,\n  referrerPolicy,\n  sizes,\n  useMap,\n  fetchPriority,\n  hasHover = false,\n  hasActive = false,\n  ...restProps\n}: ContentCardProps): React.ReactNode => {\n  return (\n    <Card\n      mode={mode}\n      getRootRef={getRootRef}\n      style={style}\n      className={classNames(restProps.disabled && styles['ContentCard--disabled'], className)}\n    >\n      <Tappable\n        {...restProps}\n        hasHover={hasHover}\n        hasActive={hasActive}\n        className={styles['ContentCard__tappable']}\n      >\n        {(src || srcSet) && (\n          <img\n            ref={getRef}\n            className={styles['ContentCard__img']}\n            src={src}\n            srcSet={srcSet}\n            alt={alt}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            useMap={useMap}\n            {...getFetchPriorityProp(fetchPriority)}\n            height={height}\n            style={{ maxHeight }}\n            width=\"100%\"\n          />\n        )}\n        <div className={styles['ContentCard__body']}>\n          {hasReactNode(subtitle) && (\n            <Caption\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__subtitle'])}\n              weight=\"1\"\n              level=\"3\"\n              caps\n            >\n              {subtitle}\n            </Caption>\n          )}\n          {hasReactNode(header) && (\n            <Headline\n              className={styles['ContentCard__text']}\n              weight=\"2\"\n              level=\"1\"\n              Component={headerComponent}\n            >\n              {header}\n            </Headline>\n          )}\n          {hasReactNode(text) && <Text className={styles['ContentCard__text']}>{text}</Text>}\n          {hasReactNode(caption) && (\n            <Footnote\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__caption'])}\n            >\n              {caption}\n            </Footnote>\n          )}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n"],"names":["ContentCard","subtitle","header","headerComponent","text","caption","className","mode","style","getRootRef","getRef","maxHeight","src","srcSet","alt","width","height","crossOrigin","decoding","loading","referrerPolicy","sizes","useMap","fetchPriority","hasHover","hasActive","restProps","Card","classNames","disabled","Tappable","img","ref","getFetchPriorityProp","div","hasReactNode","Caption","weight","level","caps","Headline","Component","Text","Footnote"],"mappings":";;;;+BA+CaA;;;eAAAA;;;;;;;;iEA/CU;sBACkB;uBACJ;sBAEL;0BACQ;yBAChB;0BACC;0BACA;sBACJ;AAsCd,MAAMA,cAAc;QAAC,EAC1BC,QAAQ,EACRC,MAAM,EACNC,kBAAkB,MAAM,EACxBC,IAAI,EACJC,OAAO,EACP,aAAa;IACbC,SAAS,EACTC,OAAO,QAAQ,EACfC,KAAK,EACLC,UAAU,EACV,YAAY;IACZC,MAAM,EACNC,SAAS,EACTC,GAAG,EACHC,MAAM,EACNC,MAAM,EAAE,EACRC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRC,OAAO,EACPC,cAAc,EACdC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,WAAW,KAAK,EAChBC,YAAY,KAAK,EAEA,WADdC;QA3BHzB;QACAC;QACAC;QACAC;QACAC;QAEAC;QACAC;QACAC;QACAC;QAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,qBACE,qBAACE,UAAI;QACHpB,MAAMA;QACNE,YAAYA;QACZD,OAAOA;QACPF,WAAWsB,IAAAA,gBAAU,EAACF,UAAUG,QAAQ,iCAAqCvB;kBAE7E,cAAA,sBAACwB,kBAAQ,8CACHJ;YACJF,UAAUA;YACVC,WAAWA;YACXnB,SAAS;;gBAEPM,CAAAA,OAAOC,MAAK,mBACZ,qBAACkB;oBACCC,KAAKtB;oBACLJ,SAAS;oBACTM,KAAKA;oBACLC,QAAQA;oBACRC,KAAKA;oBACLG,aAAaA;oBACbC,UAAUA;oBACVC,SAASA;oBACTC,gBAAgBA;oBAChBC,OAAOA;oBACPC,QAAQA;mBACJW,IAAAA,2BAAoB,EAACV;oBACzBP,QAAQA;oBACRR,OAAO;wBAAEG;oBAAU;oBACnBI,OAAM;;8BAGV,sBAACmB;oBAAI5B,SAAS;;wBACX6B,IAAAA,kBAAY,EAAClC,2BACZ,qBAACmC,gBAAO;4BACN9B,WAAWsB,IAAAA,gBAAU;4BACrBS,QAAO;4BACPC,OAAM;4BACNC,IAAI;sCAEHtC;;wBAGJkC,IAAAA,kBAAY,EAACjC,yBACZ,qBAACsC,kBAAQ;4BACPlC,SAAS;4BACT+B,QAAO;4BACPC,OAAM;4BACNG,WAAWtC;sCAEVD;;wBAGJiC,IAAAA,kBAAY,EAAC/B,uBAAS,qBAACsC,UAAI;4BAACpC,SAAS;sCAAgCF;;wBACrE+B,IAAAA,kBAAY,EAAC9B,0BACZ,qBAACsC,kBAAQ;4BACPrC,WAAWsB,IAAAA,gBAAU;sCAEpBvB;;;;;;;AAOf"}